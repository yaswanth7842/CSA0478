#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>
#include <dirent.h>

int main() {
    // Example for open and fcntl
    int file_descriptor = open("example.txt", O_RDWR | O_CREAT, S_IRUSR | S_IWUSR);
    if (file_descriptor < 0) {
        perror("Error opening file");
        exit(1);
    }
    
    int file_flags = fcntl(file_descriptor, F_GETFL, 0);
    if (file_flags == -1) {
        perror("Error getting file flags");
        exit(1);
    }
    printf("File Flags: %d\n", file_flags);

    // Example for lseek
    off_t offset = lseek(file_descriptor, 10, SEEK_SET);
    if (offset == -1) {
        perror("Error setting offset");
        exit(1);
    }
    printf("Offset: %ld\n", offset);

    // Example for stat
    struct stat file_info;
    if (stat("example.txt", &file_info) == -1) {
        perror("Error getting file info");
        exit(1);
    }
    printf("File size: %ld bytes\n", file_info.st_size);

    // Example for opendir and readdir
    DIR *dir = opendir(".");
    if (dir == NULL) {
        perror("Error opening directory");
        exit(1);
    }
    struct dirent *entry;
    while ((entry = readdir(dir)) != NULL) {
        printf(">> %s\n", entry->d_name);
    }
    closedir(dir);

    // Clean up
    if (close(file_descriptor) < 0) {
        perror("Error closing file");
        exit(1);
    }

    return 0;
}
